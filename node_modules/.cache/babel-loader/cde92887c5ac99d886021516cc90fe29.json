{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nohab\\\\Documents\\\\personal-website-react\\\\src\\\\components\\\\Career\\\\Career.jsx\";\nimport React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport CareerList from '../CareerList/CareerList';\nimport \"./Career.css\";\nimport { proj_feat, proj_pers, proj_acad, exp_it, exp_swe, education, lang } from \"../../data\";\nimport ExpList from '../ExpList/ExpList';\nconst expPerPage = 4;\nexport default function Career() {\n  // CareerList hooks & states\n  const [selectedProject, setSelectedProject] = useState(\"featured\");\n  const [selectedExperience, setSelectedExperience] = useState(\"all\");\n  const [projectData, setProjectData] = useState(proj_feat);\n  const [expData, setExpData] = useState([]); // yes\n\n  const [expToShow, setExpToShow] = useState([]);\n  const [next, setNext] = useState(4);\n\n  const showNext = reset => {\n    if (reset) {\n      setNext(0);\n    }\n\n    let after = next + expPerPage;\n\n    if (after >= projectData.length) {\n      after = projectData.length;\n    }\n\n    setExpToShow(projectData.slice(next, after));\n    setNext(after);\n\n    if (after == projectData.length) {\n      setNext(4);\n    }\n  };\n\n  const handleShowMoreExp = () => {\n    showNext(false);\n  };\n\n  const handleChange = () => {\n    setExpToShow(projectData.slice(0, expPerPage));\n    setNext(expPerPage);\n  };\n\n  const projectsList = [{\n    id: \"all\",\n    name: \"All\"\n  }, {\n    id: \"featured\",\n    name: \"Featured\"\n  }, {\n    id: \"academic\",\n    name: \"Academic\"\n  }, {\n    id: \"personal\",\n    name: \"Personal\"\n  }];\n  const experienceList = [{\n    id: \"all\",\n    name: \"All\"\n  }, {\n    id: \"swe\",\n    name: \"Software Engineering\"\n  }, {\n    id: \"it\",\n    name: \"IT\"\n  }];\n  useEffect(() => {\n    switch (selectedProject) {\n      case \"featured\":\n        setProjectData(proj_feat);\n        break;\n\n      case \"academic\":\n        setProjectData(proj_acad);\n        break;\n\n      case \"personal\":\n        setProjectData(proj_pers);\n        break;\n\n      default:\n        setProjectData(proj_pers.concat(proj_acad));\n        break;\n    }\n\n    switch (selectedExperience) {\n      case \"swe\":\n        setExpData(exp_swe);\n        break;\n\n      case \"it\":\n        setExpData(exp_it);\n        break;\n\n      default:\n        setExpData(exp_swe.concat(exp_it));\n        break;\n    }\n  }, [selectedExperience, selectedProject]);\n  useEffect(useCallback(() => {\n    console.log(\"init\");\n    showNext(true);\n  }, [selectedProject]));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career\",\n    id: \"career\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Career\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, projectsList.map((item, index) => /*#__PURE__*/React.createElement(CareerList, {\n    index: index,\n    key: item.id,\n    id: item.id,\n    name: item.name,\n    active: selectedProject === item.id,\n    setSelected: setSelectedProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, expToShow.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.uid,\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.link,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.img,\n    alt: item.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShowMoreExp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Load more\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Experience\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, experienceList.map((item, index) => /*#__PURE__*/React.createElement(CareerList, {\n    index: index,\n    key: item.id,\n    id: item.id,\n    name: item.name,\n    active: selectedExperience === item.id,\n    setSelected: setSelectedExperience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, expData.map(d => /*#__PURE__*/React.createElement(\"div\", {\n    key: d.id,\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: d.link,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: d.img,\n    alt: d.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 66\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, d.title))))))));\n}","map":{"version":3,"sources":["C:/Users/nohab/Documents/personal-website-react/src/components/Career/Career.jsx"],"names":["React","useState","useEffect","useCallback","CareerList","proj_feat","proj_pers","proj_acad","exp_it","exp_swe","education","lang","ExpList","expPerPage","Career","selectedProject","setSelectedProject","selectedExperience","setSelectedExperience","projectData","setProjectData","expData","setExpData","expToShow","setExpToShow","next","setNext","showNext","reset","after","length","slice","handleShowMoreExp","handleChange","projectsList","id","name","experienceList","concat","console","log","map","item","index","uid","link","img","desc","title","d"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect, useCallback} from 'react';\r\nimport CareerList from '../CareerList/CareerList';\r\nimport \"./Career.css\";\r\nimport { proj_feat, proj_pers, proj_acad, exp_it, exp_swe, education, lang } from \"../../data\"\r\nimport ExpList from '../ExpList/ExpList';\r\n\r\nconst expPerPage = 4;\r\n\r\nexport default function Career() {\r\n\r\n    // CareerList hooks & states\r\n    const [selectedProject, setSelectedProject] = useState(\"featured\");\r\n    const [selectedExperience, setSelectedExperience] = useState(\"all\");\r\n    const [projectData, setProjectData] = useState(proj_feat);\r\n    const [expData, setExpData] = useState([]);\r\n\r\n    // yes\r\n    const [expToShow, setExpToShow] = useState([]);\r\n    const [next, setNext] = useState(4);\r\n\r\n    const showNext = (reset) => {\r\n        if (reset) {\r\n            setNext(0);\r\n        }\r\n        let after = next + expPerPage;\r\n        if (after >= projectData.length) {\r\n            after = projectData.length;\r\n        }\r\n        setExpToShow(projectData.slice(next, after));\r\n        setNext(after);\r\n        if (after == projectData.length) {\r\n            setNext(4);\r\n        }\r\n    };\r\n\r\n    const handleShowMoreExp = () => {\r\n        showNext(false);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        setExpToShow(projectData.slice(0, expPerPage));\r\n        setNext(expPerPage);\r\n    }\r\n\r\n    const projectsList = [\r\n        {\r\n            id: \"all\",\r\n            name: \"All\"\r\n        },\r\n        {\r\n            id: \"featured\",\r\n            name: \"Featured\"\r\n        },\r\n        {\r\n            id: \"academic\",\r\n            name: \"Academic\"\r\n        },\r\n        {\r\n            id: \"personal\",\r\n            name: \"Personal\"\r\n        }\r\n    ]\r\n\r\n    const experienceList = [\r\n        {\r\n            id: \"all\",\r\n            name: \"All\"\r\n        },\r\n        {\r\n            id: \"swe\",\r\n            name: \"Software Engineering\"\r\n        },\r\n        {\r\n            id: \"it\",\r\n            name: \"IT\"\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        switch(selectedProject) {\r\n            case \"featured\":\r\n                setProjectData(proj_feat);\r\n                break;\r\n            case \"academic\":\r\n                setProjectData(proj_acad);\r\n                break;\r\n            case \"personal\":\r\n                setProjectData(proj_pers);\r\n                break;\r\n            default:\r\n                setProjectData(proj_pers.concat(proj_acad));\r\n                break;\r\n        }\r\n        switch(selectedExperience) {\r\n            case \"swe\":\r\n                setExpData(exp_swe);\r\n                break;\r\n            case \"it\":\r\n                setExpData(exp_it);\r\n                break;\r\n            default:\r\n                setExpData(exp_swe.concat(exp_it));\r\n                break;\r\n        }\r\n    }, [selectedExperience, selectedProject])\r\n\r\n    useEffect(useCallback(() => {\r\n        console.log(\"init\");\r\n        showNext(true);\r\n    }, [selectedProject]))\r\n\r\n    return (\r\n        <div className=\"career\" id=\"career\">\r\n            <h1>Career</h1>\r\n            <div className=\"container\">\r\n                <div className=\"left\">\r\n                    <h2 className=\"title\">Projects</h2>\r\n                    <ul>\r\n                        {projectsList.map((item, index)=>(\r\n                            <CareerList index={index} key={item.id} id={item.id} name={item.name} active={selectedProject === item.id} setSelected={setSelectedProject}></CareerList>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"career-items\">\r\n                        {expToShow.map((item) => (\r\n                            <div key={item.uid} className=\"item\"> \r\n                                <a href={item.link} target=\"_blank\"><img src={item.img} alt={item.desc}></img></a>\r\n                                <div className=\"overlay\">\r\n                                    <h3 id=\"name\">{item.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button onClick={handleShowMoreExp}>Load more</button>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <h2 className=\"title\">Experience</h2>\r\n                    <ul>\r\n                        {experienceList.map((item, index)=>(\r\n                            <CareerList index={index} key={item.id} id={item.id} name={item.name} active={selectedExperience === item.id} setSelected={setSelectedExperience}></CareerList>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"career-items\">\r\n                        {expData.map((d) => (\r\n                            <div key={d.id} className=\"item\"> \r\n                                <a href={d.link} target=\"_blank\"><img src={d.img} alt={d.desc}></img></a>\r\n                                <div className=\"overlay\">\r\n                                    <h3 id=\"name\">{d.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}