{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nohab\\\\Documents\\\\personal-website-react\\\\src\\\\components\\\\Career\\\\Career.jsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport CareerList from '../CareerList/CareerList';\nimport \"./Career.css\";\nimport { proj_feat, proj_pers, proj_acad, exp_it, exp_swe, education, lang } from \"../../data\";\nimport ExpList from '../ExpList/ExpList';\nconst expPerPage = 4;\nexport default function Career() {\n  // CareerList hooks & states\n  const [selectedProject, setSelectedProject] = useState(\"featured\");\n  const [selectedExperience, setSelectedExperience] = useState(\"all\");\n  const [projectData, setProjectData] = useState([]);\n  const [expData, setExpData] = useState([]);\n  const edu = education;\n  const lan = lang; // yes\n\n  const [expToShow, setExpToShow] = useState([]);\n  const [next, setNext] = useState(4);\n\n  const showNext = (start, end) => {\n    setExpToShow(projectData.slice(start, end));\n  };\n\n  const handleShowMoreExp = () => {\n    showNext(next, next + expPerPage);\n    setNext(next + expPerPage);\n  };\n\n  const projectsList = [{\n    id: \"all\",\n    name: \"All\"\n  }, {\n    id: \"featured\",\n    name: \"Featured\"\n  }, {\n    id: \"academic\",\n    name: \"Academic\"\n  }, {\n    id: \"personal\",\n    name: \"Personal\"\n  }];\n  const experienceList = [{\n    id: \"all\",\n    name: \"All\"\n  }, {\n    id: \"swe\",\n    name: \"Software Engineering\"\n  }, {\n    id: \"it\",\n    name: \"IT\"\n  }];\n  const test = {\n    id: 0,\n    title: \"a\",\n    desc: \"b\",\n    startend: \"0\"\n  };\n  useEffect(() => {\n    if (next === 4) {\n      showNext(0, expPerPage);\n    }\n  }, []);\n  useEffect(() => {\n    switch (selectedProject) {\n      case \"featured\":\n        setProjectData(proj_feat);\n        break;\n\n      case \"academic\":\n        setProjectData(proj_acad);\n        break;\n\n      case \"personal\":\n        setProjectData(proj_pers);\n        break;\n\n      default:\n        setProjectData(proj_pers.concat(proj_acad));\n        break;\n    }\n\n    switch (selectedExperience) {\n      case \"swe\":\n        setExpData(exp_swe);\n        break;\n\n      case \"it\":\n        setExpData(exp_it);\n        break;\n\n      default:\n        setExpData(exp_swe.concat(exp_it));\n        break;\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career\",\n    id: \"career\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Career\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, projectsList.map((item, index) => /*#__PURE__*/React.createElement(CareerList, {\n    index: index,\n    id: item.id,\n    name: item.name,\n    active: selectedProject === item.id,\n    setSelected: setSelectedProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExpList, {\n    expsToShow: expToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Experience\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, experienceList.map((item, index) => /*#__PURE__*/React.createElement(CareerList, {\n    index: index,\n    id: item.id,\n    name: item.name,\n    active: selectedExperience === item.id,\n    setSelected: setSelectedExperience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"career-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, expData.map(d => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: d.link,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: d.img,\n    alt: d.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 66\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, d.title))))))));\n}","map":{"version":3,"sources":["C:/Users/nohab/Documents/personal-website-react/src/components/Career/Career.jsx"],"names":["React","useState","useEffect","CareerList","proj_feat","proj_pers","proj_acad","exp_it","exp_swe","education","lang","ExpList","expPerPage","Career","selectedProject","setSelectedProject","selectedExperience","setSelectedExperience","projectData","setProjectData","expData","setExpData","edu","lan","expToShow","setExpToShow","next","setNext","showNext","start","end","slice","handleShowMoreExp","projectsList","id","name","experienceList","test","title","desc","startend","concat","map","item","index","d","link","img"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react';\r\nimport CareerList from '../CareerList/CareerList';\r\nimport \"./Career.css\";\r\nimport { proj_feat, proj_pers, proj_acad, exp_it, exp_swe, education, lang } from \"../../data\"\r\nimport ExpList from '../ExpList/ExpList';\r\n\r\nconst expPerPage = 4;\r\n\r\nexport default function Career() {\r\n\r\n    // CareerList hooks & states\r\n    const [selectedProject, setSelectedProject] = useState(\"featured\");\r\n    const [selectedExperience, setSelectedExperience] = useState(\"all\");\r\n    const [projectData, setProjectData] = useState([]);\r\n    const [expData, setExpData] = useState([]);\r\n    const edu = education;\r\n    const lan = lang;\r\n\r\n    // yes\r\n    const [expToShow, setExpToShow] = useState([]);\r\n    const [next, setNext] = useState(4);\r\n\r\n    const showNext = (start, end) => {\r\n        setExpToShow(projectData.slice(start, end));\r\n    };\r\n\r\n    const handleShowMoreExp = () => {\r\n        showNext(next, next + expPerPage);\r\n        setNext(next + expPerPage);\r\n    };\r\n\r\n    const projectsList = [\r\n        {\r\n            id: \"all\",\r\n            name: \"All\"\r\n        },\r\n        {\r\n            id: \"featured\",\r\n            name: \"Featured\"\r\n        },\r\n        {\r\n            id: \"academic\",\r\n            name: \"Academic\"\r\n        },\r\n        {\r\n            id: \"personal\",\r\n            name: \"Personal\"\r\n        }\r\n    ]\r\n\r\n    const experienceList = [\r\n        {\r\n            id: \"all\",\r\n            name: \"All\"\r\n        },\r\n        {\r\n            id: \"swe\",\r\n            name: \"Software Engineering\"\r\n        },\r\n        {\r\n            id: \"it\",\r\n            name: \"IT\"\r\n        }\r\n    ]\r\n\r\n    const test = {\r\n        id: 0,\r\n        title: \"a\",\r\n        desc: \"b\",\r\n        startend: \"0\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (next === 4){\r\n            showNext(0, expPerPage);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        switch(selectedProject) {\r\n            case \"featured\":\r\n                setProjectData(proj_feat);\r\n                break;\r\n            case \"academic\":\r\n                setProjectData(proj_acad);\r\n                break;\r\n            case \"personal\":\r\n                setProjectData(proj_pers);\r\n                break;\r\n            default:\r\n                setProjectData(proj_pers.concat(proj_acad));\r\n                break;\r\n        }\r\n        switch(selectedExperience) {\r\n            case \"swe\":\r\n                setExpData(exp_swe);\r\n                break;\r\n            case \"it\":\r\n                setExpData(exp_it);\r\n                break;\r\n            default:\r\n                setExpData(exp_swe.concat(exp_it));\r\n                break;\r\n            \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"career\" id=\"career\">\r\n            <h1>Career</h1>\r\n            <div className=\"container\">\r\n                <div className=\"left\">\r\n                    <h2 className=\"title\">Projects</h2>\r\n                    <ul>\r\n                        {projectsList.map((item, index)=>(\r\n                            <CareerList index={index} id={item.id} name={item.name} active={selectedProject === item.id} setSelected={setSelectedProject}></CareerList>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"career-items\">\r\n                        <ExpList expsToShow={expToShow}></ExpList>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <h2 className=\"title\">Experience</h2>\r\n                    <ul>\r\n                        {experienceList.map((item, index)=>(\r\n                            <CareerList index={index} id={item.id} name={item.name} active={selectedExperience === item.id} setSelected={setSelectedExperience}></CareerList>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"career-items\">\r\n                        {expData.map((d) => (\r\n                            <div className=\"item\"> \r\n                                <a href={d.link} target=\"_blank\"><img src={d.img} alt={d.desc}></img></a>\r\n                                <div className=\"overlay\">\r\n                                    <h3 id=\"name\">{d.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}